version: '3.7'
services:
  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app 
    ports:
      - "5173:5173" 
    networks:
      - app-network

  backend:
    build:
      context: ./backend/
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      APP_ENV: development 
    volumes:
      - ./backend:/var/www 
      - /var/www/vendor 
    ports:
      - "8000:80"
    networks:
      - app-network
      - db

  appdb:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql 
    ports:
      - "3306:3306"
    networks:
      - db

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: appdb
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - appdb
    ports:
      - "8443:80"
    networks:
      - db

  dbpostgres:
    image: postgis/postgis:13-master
    container_name: dbpostgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: root
      POSTGRES_DB: blogdb
    networks:
      - db

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: root            
    ports:
      - "5050:80"                               
    volumes:
      - pgadmin-data:/var/lib/pgadmin       
    networks:
      - db                                      


  apinest:
    build:
      context: ./blog-service
    container_name: apinest
    ports:
      - 3000:3000
    depends_on:
      - dbpostgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:root@dbpostgres:5432/blogdb
    networks:
      - db

networks:
  app-network:
    driver: bridge
  db:

volumes:
  mysql-data:
  db_data:
  pgadmin-data:                       
